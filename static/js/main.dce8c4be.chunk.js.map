{"version":3,"sources":["IssueForm.module.scss","Intro.module.scss","en-US.ts","zh-CN.ts","LocaleContext.ts","I18n.tsx","IntroModal.tsx","Intro.tsx","BugForm.tsx","FeatureForm.tsx","PreviewModal.tsx","ReproModal.tsx","createPreview.ts","api.ts","hooks/useSimilarIssues.ts","hooks/useVersions.ts","IssueForm.tsx","App.tsx","index.tsx","App.module.scss"],"names":["module","exports","enMessages","require","window","appLocale","en","messages","locale","data","appLocaleData","zhMessages","zh","LocaleContext","createContextIO","cache","localStorage","getItem","navigator","language","toLowerCase","getLocale","texts","intro","introModal","motivationHelp","proposalHelp","reproHelp","reproModal","stepsHelp","I18n","id","restProps","React","Text","IntroModal","visible","onCancel","title","defaultMessage","footer","width","className","Intro","introRef","current","addEventListener","e","target","getAttribute","preventDefault","styles","ref","modalVisible","Option","Select","TextArea","Input","BugForm","versions","Item","span","name","label","extra","showSearch","map","version","key","value","offset","rules","required","validator","rule","a","includes","Promise","reject","resolve","type","autoSize","minRows","FormItem","Form","FeatureForm","md","Remarkable","PreviewModal","content","onCreate","cancelText","onClick","dangerouslySetInnerHTML","__html","render","ReproModal","createPreview","issueType","values","react","browser","system","reproduction","steps","expected","actual","repo","link","indexOf","createReproductionLink","trim","createBugPreview","motivation","proposal","createFeaturePreview","compareVersions","npmMapping","checkStatus","response","status","Error","statusText","orderVersions","normalVersions","nextVersions","forEach","match","push","sort","b","useSimilarIssues","similarIssues","searchIssues","keyword","q","encodeURIComponent","fetch","then","json","items","api","_issues","useVersions","repoVersions","fetchVersions","npmPromise","Object","keys","filter","ver","slice","releases","r","prerelease","tag_name","catch","err","console","warn","params","location","search","split","reduce","acc","param","IssueForm","useForm","form","getContent","getFieldsValue","setContent","preview","setPreview","triggerPreview","newPreview","getFieldValue","formRef","bindModalHandler","restoreValues","omitFields","JSON","parse","setFieldsValue","setTimeout","currentValues","handleRepoChange","handleTypeChange","handleTitleBlur","handleCreate","replace","withMarker","body","clear","open","similarIssuesList","similar","issue","href","html_url","rel","layout","size","initialValues","onFinish","onValuesChange","_","preForm","cacheForm","setItem","stringify","onChange","Group","radioGroup","Button","onBlur","length","noStyle","shouldUpdate","prev","next","submitBtn","htmlType","icon","BugOutlined","Header","Layout","Content","Footer","App","localeString","forceUpdateLocale","addLocaleData","Provider","header","headerContainer","logo","alt","src","read","write","switchLocale","style","textAlign","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dce8c4be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"IssueForm_submitBtn__2i6iD\",\"radioGroup\":\"IssueForm_radioGroup__3pcx2\",\"similar\":\"IssueForm_similar__32aVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"Intro_intro__3VhcL\"};","import * as appLocaleData from 'react-intl/locale-data/en';\n\nconst enMessages: any = require('./locales/en.json');\n\n(window as any).appLocale.en = {\n  messages: {\n    ...enMessages,\n  },\n  locale: 'en-US',\n  data: appLocaleData,\n};","import * as appLocaleData from 'react-intl/locale-data/zh';\n\nconst zhMessages: any = require('./locales/zh.json');\n\n(window as any).appLocale.zh = {\n  messages: {\n    ...zhMessages,\n  },\n  locale: 'zh-CN',\n  data: appLocaleData,\n};\n","import { createContextIO } from \"react-context-io\";\n\nfunction getLocale() {\n  const cache = window.localStorage.getItem(\"locale\");\n  if (cache) {\n    return cache;\n  }\n  return window.navigator.language.toLowerCase() === \"zh-cn\" ? \"zh\" : \"en\";\n}\n\nconst LocaleContext = createContextIO<string>(getLocale());\n\nexport function switchLocale(forceUpdateLocale: any) {\n  const locale = LocaleContext.read() === \"en\" ? \"zh\" : \"en\";\n  forceUpdateLocale(locale);\n  LocaleContext.write(locale);\n  window.localStorage.setItem(\"locale\", LocaleContext.read());\n}\n\nexport default LocaleContext;\n","import * as React from \"react\";\nimport { importMDX } from \"mdx.macro\";\nimport LocaleContext from \"./LocaleContext\";\n\nconst texts: any = {\n  en: {\n    intro: importMDX.sync(\"./locales/en/intro.md\"),\n    introModal: importMDX.sync(\"./locales/en/introModal.md\"),\n    motivationHelp: importMDX.sync(\"./locales/en/motivationHelp.md\"),\n    proposalHelp: importMDX.sync(\"./locales/en/proposalHelp.md\"),\n    reproHelp: importMDX.sync(\"./locales/en/reproHelp.md\"),\n    reproModal: importMDX.sync(\"./locales/en/reproModal.md\"),\n    stepsHelp: importMDX.sync(\"./locales/en/stepsHelp.md\")\n  },\n  zh: {\n    intro: importMDX.sync(\"./locales/zh/intro.md\"),\n    introModal: importMDX.sync(\"./locales/zh/introModal.md\"),\n    motivationHelp: importMDX.sync(\"./locales/zh/motivationHelp.md\"),\n    proposalHelp: importMDX.sync(\"./locales/zh/proposalHelp.md\"),\n    reproHelp: importMDX.sync(\"./locales/zh/reproHelp.md\"),\n    reproModal: importMDX.sync(\"./locales/zh/reproModal.md\"),\n    stepsHelp: importMDX.sync(\"./locales/zh/stepsHelp.md\")\n  }\n};\n\nexport interface Props {\n  id: string;\n  [name: string]: any;\n}\n\nconst I18n: React.FC<Props> = ({ id, ...restProps }) => {\n  const locale = React.useContext(LocaleContext);\n  const Text = texts[locale][id];\n\n  return (\n    <div {...restProps}>\n      <Text />\n    </div>\n  );\n};\n\nexport default I18n;\n","import * as React from \"react\";\nimport { Modal } from \"antd\";\nimport { FormattedMessage } from \"react-intl\";\nimport I18n from \"./I18n\";\n\ninterface Props {\n  visible: boolean;\n  onCancel: () => any;\n}\n\nconst IntroModal: React.FC<Props> = ({ visible, onCancel }) => (\n  <Modal\n    title={\n      <FormattedMessage\n        id=\"intro.modal\"\n        defaultMessage=\"The reason behind our strict issue policy\"\n      />\n    }\n    footer=\"\"\n    visible={visible}\n    onCancel={onCancel}\n    width=\"680px\"\n  >\n    <I18n className=\"paragraph\" id=\"introModal\" />\n  </Modal>\n);\n\nexport default IntroModal;\n","import * as React from \"react\";\nimport IntroModal from \"./IntroModal\";\nimport I18n from \"./I18n\";\nimport { state } from \"reactive.macro\";\nimport styles from \"./Intro.module.scss\";\n\nconst Intro: React.FC = () => {\n  let modalVisible = state(false);\n  const introRef = React.useRef<null | HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    introRef.current!.addEventListener(\"click\", (e: Event) => {\n      if ((e.target as any).getAttribute(\"href\") === \"#intro-modal\") {\n        e.preventDefault();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        modalVisible = true;\n      }\n    });\n  }, []);\n\n  return (\n    <div className={`${styles.intro} paragraph`} ref={introRef}>\n      <IntroModal\n        visible={modalVisible}\n        onCancel={() => (modalVisible = false)}\n      />\n      <I18n id=\"intro\" />\n    </div>\n  );\n};\n\nexport default Intro;\n","import * as React from \"react\";\nimport { Form, Row, Col, Input, Select } from \"antd\";\nimport { FormattedMessage } from \"react-intl\";\nimport I18n from \"./I18n\";\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\ninterface Props {\n  versions: string[];\n}\n\nconst BugForm: React.FC<Props> = ({ versions }) => (\n  <div>\n    {/* ==================================== Environment ==================================== */}\n    <Form.Item>\n      <Row>\n        <Col span={11}>\n          {/* antd version */}\n          <Form.Item\n            name=\"version\"\n            label={\n              <FormattedMessage id=\"issue.version\" defaultMessage=\"Version\" />\n            }\n            extra={\n              <FormattedMessage\n                id=\"issue.versionHelp\"\n                defaultMessage=\"Check if the issue is reproducible with the latest stable version.\"\n              />\n            }\n          >\n            <Select showSearch>\n              {versions.map(version => (\n                <Option key={version} value={version}>\n                  {version}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Col>\n        <Col span={12} offset={1}>\n          {/* react version */}\n          <Form.Item\n            name=\"react\"\n            rules={[{ required: true }]}\n            label={<FormattedMessage id=\"issue.react\" defaultMessage=\"React\" />}\n            extra={\n              <FormattedMessage\n                id=\"issue.reactHelp\"\n                defaultMessage=\"react/react-native version...\"\n              />\n            }\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Form.Item>\n\n    <Form.Item>\n      <Row>\n        {/* System */}\n        <Col span={11}>\n          <Form.Item\n            name=\"system\"\n            rules={[{ required: true }]}\n            label={\n              <FormattedMessage id=\"issue.system\" defaultMessage=\"System\" />\n            }\n            extra={\n              <FormattedMessage\n                id=\"issue.systemHelp\"\n                defaultMessage=\"System version...\"\n              />\n            }\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n\n        {/* Browser */}\n        <Col span={12} offset={1}>\n          <Form.Item\n            name=\"browser\"\n            rules={[{ required: true }]}\n            label={\n              <FormattedMessage id=\"issue.browser\" defaultMessage=\"Browser\" />\n            }\n            extra={\n              <FormattedMessage\n                id=\"issue.browserHelp\"\n                defaultMessage=\"Browser version...\"\n              />\n            }\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Form.Item>\n\n    {/* ==================================== Reproduce ==================================== */}\n    <Form.Item\n      name=\"reproduction\"\n      rules={[\n        {\n          required: true,\n          validator: async (rule, value) => {\n            if (!value || value.includes(\"new-issue.ant.design\")) {\n              return Promise.reject(\"Please provide valid reproduction url\");\n            }\n            return Promise.resolve();\n          }\n        }\n      ]}\n      label={\n        <FormattedMessage\n          id=\"issue.reproduction\"\n          defaultMessage=\"Link to minimal reproduction\"\n        />\n      }\n      extra={<I18n id=\"reproHelp\" />}\n    >\n      <Input type=\"url\" />\n    </Form.Item>\n\n    <Form.Item\n      name=\"steps\"\n      rules={[{ required: true }]}\n      label={\n        <FormattedMessage id=\"issue.steps\" defaultMessage=\"Step to reproduce\" />\n      }\n      extra={<I18n id=\"stepsHelp\" />}\n    >\n      <TextArea autoSize={{ minRows: 2 }} />\n    </Form.Item>\n    <Form.Item\n      name=\"expected\"\n      rules={[{ required: true }]}\n      label={\n        <FormattedMessage\n          id=\"issue.expected\"\n          defaultMessage=\"What is expected?\"\n        />\n      }\n    >\n      <TextArea autoSize={{ minRows: 2 }} />\n    </Form.Item>\n    <Form.Item\n      name=\"actual\"\n      rules={[{ required: true }]}\n      label={\n        <FormattedMessage\n          id=\"issue.actually\"\n          defaultMessage=\"What is actually happening?\"\n        />\n      }\n    >\n      <TextArea autoSize={{ minRows: 2 }} />\n    </Form.Item>\n    <Form.Item\n      name=\"extra\"\n      label={\n        <FormattedMessage\n          id=\"issue.extra\"\n          defaultMessage=\"Any additional comments?(optional)\"\n        />\n      }\n      extra={\n        <FormattedMessage\n          id=\"issue.extraHelp\"\n          defaultMessage=\"e.g. some background/context of how you ran into this bug.\"\n        />\n      }\n    >\n      <TextArea autoSize={{ minRows: 2 }} />\n    </Form.Item>\n  </div>\n);\n\nexport default BugForm;\n","import * as React from \"react\";\nimport { Form, Input } from \"antd\";\nimport { FormattedMessage } from \"react-intl\";\nimport I18n from \"./I18n\";\n\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\n\nconst FeatureForm: React.FC<{}> = () => (\n  <>\n    <FormItem\n      name=\"motivation\"\n      rules={[{ required: true }]}\n      label={\n        <FormattedMessage\n          id=\"issue.motivation\"\n          defaultMessage=\"What problem does this feature solve?\"\n        />\n      }\n      extra={<I18n id=\"motivationHelp\" />}\n    >\n      <TextArea autoSize={{ minRows: 2 }} />\n    </FormItem>\n    <FormItem\n      name=\"proposal\"\n      rules={[{ required: true }]}\n      label={\n        <FormattedMessage\n          id=\"issue.proposal\"\n          defaultMessage=\"What does the proposed API look like?\"\n        />\n      }\n      extra={<I18n id=\"proposalHelp\" />}\n    >\n      <TextArea autoSize={{ minRows: 2 }} />\n    </FormItem>\n  </>\n);\n\nexport default FeatureForm;\n","import * as React from \"react\";\nimport { Modal, Button } from \"antd\";\nimport { FormattedMessage } from \"react-intl\";\nimport Remarkable from \"remarkable\";\n\nconst md = new Remarkable();\n\ninterface Props {\n  visible: boolean;\n  content: string;\n  onCancel: () => any;\n  onCreate: () => any;\n}\n\nconst PreviewModal: React.FC<Props> = ({\n  visible,\n  content,\n  onCancel,\n  onCreate\n}) => (\n  <Modal\n    title={\n      <FormattedMessage\n        id=\"previewModal.title\"\n        defaultMessage=\"Issue Preview\"\n      />\n    }\n    cancelText=\"\"\n    width=\"680px\"\n    visible={visible}\n    onCancel={onCancel}\n    footer={\n      <Button onClick={onCreate} type=\"primary\">\n        <FormattedMessage id=\"issue.create\" defaultMessage=\"Create\" />\n      </Button>\n    }\n  >\n    <div\n      className=\"paragraph\"\n      dangerouslySetInnerHTML={{ __html: md.render(content) }}\n    />\n  </Modal>\n);\n\nexport default PreviewModal;\n","import * as React from \"react\";\nimport { Modal } from \"antd\";\nimport { FormattedMessage } from \"react-intl\";\nimport I18n from \"./I18n\";\n\ninterface Props {\n  visible: boolean;\n  onCancel: () => any;\n}\n\nconst ReproModal: React.FC<Props> = ({ visible, onCancel }) => {\n  return (\n    <Modal\n      title={\n        <FormattedMessage\n          id=\"repro.about\"\n          defaultMessage=\"About Reproductions\"\n        />\n      }\n      footer=\"\"\n      visible={visible}\n      onCancel={onCancel}\n      width=\"680px\"\n    >\n      <I18n className=\"paragraph\" id=\"reproModal\" />\n    </Modal>\n  );\n};\n\nexport default ReproModal;\n","export default function createPreview(issueType: string, values: any) {\n  if (issueType === \"bug\") {\n    return createBugPreview(values);\n  }\n  return createFeaturePreview(values);\n}\n\nfunction createBugPreview({\n  version,\n  react,\n  system,\n  browser,\n  reproduction,\n  steps,\n  expected,\n  actual,\n  extra,\n  repo\n}: any) {\n  return `\n\n### Reproduction link\n\n${createReproductionLink(reproduction)}\n\n### Steps to reproduce\n\n${steps}\n\n### What is expected?\n\n${expected}\n\n### What is actually happening?\n\n${actual}\n\n### Environment and version\n\n- antd: \\`${version || \"not specified\"}\\`\n- React: \\`${react || \"not specified\"}\\`\n- System: \\`${version || \"not specified\"}\\`\n- Browser: \\`${browser || \"not specified\"}\\`\n\n${extra ? `---\\n${extra}` : \"\"}\n`.trim();\n}\n\nfunction createFeaturePreview({ motivation, proposal }: any) {\n  return `\n### What problem does this feature solve?\n${motivation}\n\n### What does the proposed API look like?\n${proposal}\n`.trim();\n}\n\nfunction createReproductionLink(link: string) {\n  if (!link) {\n    return;\n  }\n\n  if (link.indexOf(\"codesandbox.io\") >= 0) {\n    return `[![Edit on CodeSandbox](https://gw.alipayobjects.com/zos/antfincdn/HnwnLhPWA/codesandbox.png)](${link})`;\n  }\n\n  return `[${link}](${link})`;\n}\n","const compareVersions: any = require(\"compare-versions\");\n\ninterface Response {\n  status: number;\n  statusText: string;\n  json(): any;\n}\n\nconst npmEndpoint = \"https://registry.npmmirror.com\";\nconst endpoint = \"https://api.github.com\";\n\nconst npmMapping: { [repo: string]: string } = {\n  \"ant-design\": \"antd\",\n  \"ant-design-mobile\": \"antd-mobile\",\n  \"ant-design-mobile-rn\": \"@ant-design/react-native\"\n};\n\nfunction checkStatus(response: Response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  } else {\n    throw new Error(response.statusText);\n  }\n}\n\nfunction orderVersions(versions: string[]): string[] {\n  const normalVersions: string[] = [];\n  const nextVersions: string[] = [];\n  versions.forEach(version => {\n    if (version.match(/^\\d+\\.\\d+\\.\\d+$/) || version.includes(\"-rc.\")) {\n      normalVersions.push(version);\n    } else {\n      nextVersions.push(version);\n    }\n  });\n\n  return [\n    ...normalVersions.sort((a: string, b: string) => -compareVersions(a, b)),\n    ...nextVersions.sort((a: string, b: string) => -compareVersions(a, b))\n  ];\n}\n\nexport function fetchVersions(repo: string) {\n  const npmPromise = fetch(`${npmEndpoint}/${npmMapping[repo]}`)\n    .then(checkStatus)\n    .then((response: Response) => response.json())\n    .then(({ versions }) =>\n      Object.keys(versions).filter(ver => !ver.includes(\"-\"))\n    )\n    .then(versions => orderVersions(versions))\n    .then(versions => versions.slice(0, 100));\n\n  // We use github versions first, but if failed use npm versions as backup\n  return fetch(`${endpoint}/repos/ant-design/${repo}/releases?per_page=100`)\n    .then(checkStatus)\n    .then((response: Response) => response.json())\n    .then(releases => releases.filter((r: any) => !r.prerelease))\n    .then(releases => releases.map((r: any) => r.tag_name))\n    .then(versions => orderVersions(versions))\n    .catch(err => {\n      console.warn(err);\n      return npmPromise;\n    });\n}\n\nexport function fetchIssues(repo: string, keyword: string) {\n  const q = encodeURIComponent(`is:issue repo:ant-design/${repo} ${keyword}`);\n  return fetch(`${endpoint}/search/issues?q=${q}&per_page=5`)\n    .then(checkStatus)\n    .then((response: Response) => response.json())\n    .then(json => json.items);\n}\n","import * as api from \"../api\";\nimport { state } from \"reactive.macro\";\n\nexport default function useSimilarIssues() {\n  let similarIssues: any[] = state([]);\n\n  const searchIssues = (repo: string, title: string) => {\n    if (title) {\n      api.fetchIssues(repo, title).then(_issues => (similarIssues = _issues));\n    } else {\n      similarIssues = [];\n    }\n  };\n\n  return {\n    similarIssues,\n    searchIssues\n  };\n}\n","import * as api from \"../api\";\nimport { state } from \"reactive.macro\";\n\nexport default function useVersions() {\n  let repoVersions: { [repo: string]: string[] } = state({});\n\n  const fetchVersions = (repo: string) => {\n    api.fetchVersions(repo).then(\n      (versions: string[]) =>\n        (repoVersions = {\n          ...repoVersions,\n          [repo]: versions\n        })\n    );\n  };\n\n  return { repoVersions, fetchVersions };\n}\n","import * as React from \"react\";\nimport { Form, Row, Col, Input, Select, Button, Radio } from \"antd\";\nimport { FormattedMessage } from \"react-intl\";\nimport { BugOutlined } from \"@ant-design/icons\";\nimport { state } from \"reactive.macro\";\nimport BugForm from \"./BugForm\";\nimport FeatureForm from \"./FeatureForm\";\nimport PreviewModal from \"./PreviewModal\";\nimport ReproModal from \"./ReproModal\";\nimport createPreview from \"./createPreview\";\nimport useSimilarIssues from \"./hooks/useSimilarIssues\";\nimport useVersions from \"./hooks/useVersions\";\nimport styles from \"./IssueForm.module.scss\";\n\nconst { Option } = Select;\n\nconst params: any = window.location.search\n  .slice(1)\n  .split(\"&\")\n  .reduce((acc, param) => {\n    const [key, value] = param.split(\"=\");\n    return { ...acc, [key]: value };\n  }, {}); // tslint:disable-line\n\nif (!params.repo) {\n  params.repo = \"ant-design\";\n}\n\nconst IssueForm: React.FC<{}> = () => {\n  let reproModal = state(false);\n\n  const [form] = Form.useForm();\n\n  const getContent = React.useCallback(\n    (type: string) => createPreview(type, form.getFieldsValue()),\n    [form]\n  );\n\n  const [content, setContent] = React.useState(\"\");\n  const [preview, setPreview] = React.useState(false);\n  const triggerPreview = (newPreview: boolean) => {\n    setContent(getContent(form.getFieldValue(\"type\")));\n    setPreview(newPreview);\n  };\n\n  const formRef = React.useRef<HTMLDivElement | null>(null);\n  const { similarIssues, searchIssues } = useSimilarIssues();\n  const { repoVersions, fetchVersions } = useVersions();\n\n  const bindModalHandler = React.useCallback(() => {\n    formRef.current!.addEventListener(\"click\", (e: Event) => {\n      if ((e.target as any).getAttribute(\"href\") === \"#repro-modal\") {\n        e.preventDefault();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        reproModal = true;\n      }\n    });\n  }, []);\n\n  // Load form data from localStorage\n  const restoreValues = React.useCallback(\n    (omitFields: Array<string> = []) => {\n      const cache = localStorage.getItem(\"form\");\n      if (cache) {\n        const values = JSON.parse(cache);\n        const keys = Object.keys(values);\n\n        // Remove unless fields\n        omitFields.forEach(key => {\n          delete values[key];\n        });\n\n        if (values.type) {\n          form.setFieldsValue({\n            type: values.type\n          });\n        }\n\n        // Next frame (IE 9 not support RAF)\n        setTimeout(() => {\n          // Remove useless value\n          const currentValues = form.getFieldsValue();\n          keys.forEach(key => {\n            if (!(key in currentValues)) {\n              delete values[key];\n            }\n          });\n          form.setFieldsValue(values);\n        }, 100);\n      }\n    },\n    [form]\n  );\n\n  const handleRepoChange = React.useCallback(\n    (repo: string) => {\n      if (!repoVersions[repo]) {\n        fetchVersions(repo);\n      }\n      form.setFieldsValue({\n        version: repoVersions?.[repo]?.[0]\n      });\n    },\n    [form, fetchVersions, repoVersions]\n  );\n\n  const handleTypeChange = React.useCallback(() => {\n    restoreValues([\"type\"]);\n  }, [restoreValues]);\n\n  const handleTitleBlur = React.useCallback(() => {\n    const repo = form.getFieldValue(\"repo\");\n    const title = form.getFieldValue(\"title\");\n    searchIssues(repo, title);\n  }, [form, searchIssues]);\n\n  const handleCreate = React.useCallback(() => {\n    const issueType = form.getFieldValue(\"type\");\n    const repo = form.getFieldValue(\"repo\");\n    const title = encodeURIComponent(form.getFieldValue(\"title\")).replace(\n      /%2B/gi,\n      \"+\"\n    );\n    const withMarker = `${getContent(\n      issueType\n    )}\\n\\n<!-- generated by ant-design-issue-helper. DO NOT REMOVE -->`;\n    const body = encodeURIComponent(withMarker).replace(/%2B/gi, \"+\");\n    const label =\n      issueType === \"feature\" ? \"&labels=💡%20Feature%20Request\" : \"\";\n\n    localStorage.clear();\n\n    window.open(\n      `https://github.com/ant-design/${repo}/issues/new?title=${title}&body=${body}${label}`\n    );\n  }, [form, getContent]);\n\n  React.useEffect(() => {\n    fetchVersions(params.repo);\n    bindModalHandler();\n    restoreValues();\n  }, [fetchVersions, bindModalHandler, restoreValues]);\n\n  const repo = form.getFieldValue(\"repo\");\n  const versions = repoVersions[repo] || [];\n\n  const similarIssuesList = (\n    <Form.Item className={styles.similar}>\n      <h3>Similar Issues:</h3>\n      <ul>\n        {similarIssues.map(issue => (\n          <li key={issue.id}>\n            <a href={issue.html_url} target=\"_blank\" rel=\"noreferrer noopener\">\n              {issue.title}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </Form.Item>\n  );\n\n  return (\n    <div ref={formRef}>\n      <Form\n        form={form}\n        layout=\"vertical\"\n        size=\"large\"\n        initialValues={{\n          repo: params.repo,\n          type: \"bug\",\n          version: versions[0]\n        }}\n        onFinish={() => {\n          triggerPreview(true);\n        }}\n        onValuesChange={(_, values) => {\n          let preForm = {};\n          try {\n            preForm = JSON.parse(localStorage.getItem(\"form\") as string) || {};\n          } catch (err) {\n            // Do nothing\n          }\n          const cacheForm: any = {\n            ...preForm\n          };\n          Object.keys(values).forEach(key => {\n            if (values[key]) {\n              cacheForm[key] = values[key];\n            }\n          });\n          localStorage.setItem(\"form\", JSON.stringify(cacheForm, null, 2));\n        }}\n      >\n        <PreviewModal\n          visible={preview}\n          content={content}\n          onCancel={() => {\n            triggerPreview(false);\n          }}\n          onCreate={handleCreate}\n        />\n        <ReproModal\n          visible={reproModal}\n          onCancel={() => (reproModal = false)}\n        />\n        <Row>\n          <Col span={11}>\n            <Form.Item\n              name=\"repo\"\n              label={\n                <FormattedMessage\n                  id=\"issue.repo\"\n                  defaultMessage=\"I am opening an issue for\"\n                />\n              }\n              extra={\n                <FormattedMessage\n                  id=\"issue.repoHelp\"\n                  defaultMessage=\"Please make sure to file the issue at appropriate repo.\"\n                />\n              }\n            >\n              <Select onChange={handleRepoChange}>\n                <Option value=\"ant-design\">ant-design</Option>\n                <Option value=\"ant-design-mobile\">ant-design-mobile</Option>\n                <Option value=\"ant-design-mobile-rn\">\n                  ant-design-mobile-rn\n                </Option>\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={12} offset={1}>\n            <Form.Item\n              name=\"type\"\n              label={\n                <FormattedMessage id=\"issue.type\" defaultMessage=\"This is a\" />\n              }\n            >\n              <Radio.Group\n                onChange={handleTypeChange}\n                className={styles.radioGroup}\n              >\n                <Radio.Button value=\"bug\">\n                  <FormattedMessage\n                    id=\"issue.type.bug\"\n                    defaultMessage=\"Bug Report\"\n                  />\n                </Radio.Button>\n                <Radio.Button value=\"feature\">\n                  <FormattedMessage\n                    id=\"issue.type.feature\"\n                    defaultMessage=\"Feature Request\"\n                  />\n                </Radio.Button>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n        </Row>\n        <Form.Item\n          name=\"title\"\n          label={<FormattedMessage id=\"issue.title\" defaultMessage=\"Title\" />}\n          rules={[{ required: true }]}\n        >\n          <Input onBlur={handleTitleBlur} />\n        </Form.Item>\n        {similarIssues.length > 0 && similarIssuesList}\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, next) => prev.type !== next.type}\n        >\n          {() =>\n            form.getFieldValue(\"type\") === \"feature\" ? (\n              <FeatureForm />\n            ) : (\n              <BugForm versions={versions} />\n            )\n          }\n        </Form.Item>\n        <Form.Item>\n          <div className={styles.submitBtn}>\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              htmlType=\"submit\"\n              icon={<BugOutlined />}\n            >\n              <FormattedMessage id=\"issue.preview\" defaultMessage=\"Preview\" />\n            </Button>\n          </div>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default IssueForm;\n","import * as React from \"react\";\nimport { IntlProvider, addLocaleData } from \"react-intl\";\nimport { Layout, Button } from \"antd\";\nimport Intro from \"./Intro\";\nimport IssueForm from \"./IssueForm\";\nimport LocaleContext, { switchLocale } from \"./LocaleContext\";\nimport styles from \"./App.module.scss\";\n\nconst { Header, Content, Footer } = Layout;\n\nconst App: React.FC = () => {\n  const locale = React.useContext(LocaleContext);\n  const [localeString, forceUpdateLocale] = React.useState(locale);\n\n  const appLocale = window.appLocale[localeString];\n  addLocaleData(appLocale.data);\n\n  return (\n    <LocaleContext.Provider>\n      <Layout className=\"layout\">\n        <Header className={styles.header}>\n          <div className={styles.headerContainer}>\n            <div className={styles.logo}>\n              <img\n                alt=\"logo\"\n                src=\"https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg\"\n              />\n              <h1>Ant Design Issue Helper</h1>\n            </div>\n            <div className={styles.locale}>\n              <Button\n                size=\"small\"\n                onClick={() => switchLocale(forceUpdateLocale)}\n              >\n                {localeString === \"en\" ? \"中文\" : \"English\"}\n              </Button>\n            </div>\n          </div>\n        </Header>\n        <IntlProvider locale={localeString} messages={appLocale.messages}>\n          <Content className={styles.content}>\n            <Intro />\n            <IssueForm />\n          </Content>\n        </IntlProvider>\n        <Footer style={{ textAlign: \"center\" }}>\n          Inspired by{\" \"}\n          <a\n            href=\"https://new-issue.vuejs.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Vue Issue Helper\n          </a>{\" \"}\n          ·{\" \"}\n          <a href=\"https://github.com/ant-design/antd-issue-helper\">\n            Source Code\n          </a>\n        </Footer>\n      </Layout>\n    </LocaleContext.Provider>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./en-US\";\nimport \"./zh-CN\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__2L3DO\",\"headerContainer\":\"App_headerContainer__3EsT6\",\"logo\":\"App_logo__2qPv-\",\"content\":\"App_content__1Wt3K\"};"],"sourceRoot":""}